var o=Object.defineProperty;var l=(a,s,i)=>s in a?o(a,s,{enumerable:!0,configurable:!0,writable:!0,value:i}):a[s]=i;var e=(a,s,i)=>(l(a,typeof s!="symbol"?s+"":s,i),i);import{p as c}from"./p5.min-9f376f7a.js";import{c as n}from"./utils-a26ac38d.js";class x extends c.Vector{constructor(i,t,h={}){super(i,t);e(this,"radius");e(this,"acceleration",new c.Vector);e(this,"velocity");e(this,"mass");e(this,"min",5);e(this,"max",25);this.radius=h.radius??5,this.mass=h.mass??1,this.velocity=h.velInit??new c.Vector(0,0)}applyForce(i){let t=i.copy().div(this.mass);this.acceleration.add(t)}update(){this.velocity.add(this.acceleration),this.acceleration.mult(0),this.add(this.velocity)}distFromEdge(i){return{left:this.x-this.radius,right:i.width-this.x-this.radius,top:this.y-this.radius,bottom:i.height-this.y-this.radius}}checkEdges(i){this.x+this.radius>=i.width?(this.x=i.width-this.radius,this.velocity.x*=-1):this.x-this.radius<=0&&(this.x=this.radius,this.velocity.x*=-1),this.y+this.radius>=i.height?(this.velocity.y*=-1,this.y=i.height-this.radius):this.y-this.radius<=0&&(this.velocity.y*=-1,this.y=this.radius)}draw(i){i.circle(this.x,this.y,this.radius*2)}attract(i,t=1){let h=this.copy().sub(i),r=h.mag();r=n(r,this.min,this.max),h.normalize();let d=t*this.mass*i.mass/(r*r);return h.mult(d),h}get constraint(){return{min:this.min,max:this.max}}set constraint({min:i,max:t}){i&&(this.min=i),t&&(this.max=t)}}export{x as P};
